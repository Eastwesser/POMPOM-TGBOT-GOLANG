package handlers

import (
	"fmt"
	"pompon-bot-golang/internal/keyboards"
	"strconv"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var userState = make(map[int64]string) // –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// HandleOrder –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /order
func HandleOrder(bot *tgbotapi.BotAPI, chatID int64, messageText string) {
	if messageText == "/order" {
		msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:")
		msg.ReplyMarkup = keyboards.CatalogKeyboard()
		bot.Send(msg)
		userState[chatID] = "waiting_for_category"
		return
	}

	switch userState[chatID] {
	case "waiting_for_category":
		msg := tgbotapi.NewMessage(chatID, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:")
		bot.Send(msg)
		userState[chatID] = "waiting_for_quantity"
	case "waiting_for_quantity":
		quantity, err := strconv.Atoi(messageText)
		if err != nil {
			msg := tgbotapi.NewMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
			bot.Send(msg)
			return
		}
		msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ %d —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏–Ω—è—Ç! üéâ", quantity))
		bot.Send(msg)
		delete(userState, chatID)
	}
}
